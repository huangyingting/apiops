<!--
    - Policies are applied in the order they appear.
    - Position <base/> inside a section to inherit policies from the outer scope.
    - Comments within policies are not preserved.
-->
<!-- Add policies as children to the <inbound>, <outbound>, <backend>, and <on-error> elements -->
<policies>
	<!-- Add policies as children to the <inbound>, <outbound>, <backend>, and <on-error> elements -->
	<inbound>
		<!-- How you determine user identity is application dependent -->
		<set-variable name="enduserid" value="@(context.Request.Headers.GetValueOrDefault("Authorization","").Split(' ')[1].AsJwt()?.Subject)" />
		<!--Look for userprofile for this user in the cache -->
		<cache-lookup-value key="@("userprofile-" + context.Variables["enduserid"])" variable-name="userprofile" />
		<!-- If API Management doesnâ€™t find it in the cache, make a request for it and store it -->
		<choose>
			<when condition="@(!context.Variables.ContainsKey("userprofile"))">
				<!-- Make HTTP request to get user profile -->
				<send-request mode="new" response-variable-name="userprofileresponse" timeout="10" ignore-error="true">
					<!-- Build a URL that points to the profile for the current end-user -->
					<set-url>@(new Uri(new Uri("https://apimairlineapi.azurewebsites.net/UserProfile/"),(string)context.Variables["enduserid"]).AbsoluteUri)</set-url>
					<set-method>GET</set-method>
				</send-request>
				<!-- Store response body in context variable -->
				<set-variable name="userprofile" value="@(((IResponse)context.Variables["userprofileresponse"]).Body.As<string>())" />
				<!-- Store result in cache -->
				<cache-store-value key="@("userprofile-" + context.Variables["enduserid"])" value="@((string)context.Variables["userprofile"])" duration="100000" />
			</when>
		</choose>
		<base />
	</inbound>
	<backend>
		<base />
	</backend>
	<outbound>
		<!-- Update response body with user profile-->
		<find-and-replace from="&quot;$userprofile$&quot;" to="@((string)context.Variables["userprofile"])" />
		<base />
	</outbound>
	<!-- Handle exceptions and customize error responses  -->
	<on-error>
		<base />
	</on-error>
</policies>